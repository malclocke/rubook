#!/usr/bin/env ruby

require 'rubygems'
require 'gdata'

config = {'cachefile' => '~/.rubook-cache', 'cachetime' => 60}

['/etc/rubook.yml','~/.rubook.yml','rubook.yml'].each do |conf_file|
  abs_file_name = File.expand_path(conf_file)
  next unless File.readable?(abs_file_name)
  yml = File.open(abs_file_name) { |yf| YAML::load yf }
  config.merge!(yml)
end

if config['username'].nil? or config['password'].nil?
  $stderr.puts 'Err - username and password must be set'
  exit 1
end

contacts = []

cachefile = File.expand_path(config['cachefile'])

if ! File.exists?(cachefile) or File.mtime(cachefile) < Time.now - (config['cachetime'].to_i * 60)
  client = GData::Client::Contacts.new
  client.clientlogin(config['username'], config['password'])
  feed = client.get('https://www.google.com/m8/feeds/contacts/default/full?max-results=1000').to_xml
  feed.elements.to_a('entry').each do |entry|
    entry.elements.each('gd:email') do |email|
      contacts.push(
        [entry.elements['title'].text, email.attribute('address').value]
      )
    end
  end
  unless contacts.empty?
    File.open(cachefile, 'w+') do |f|
      f.write(Marshal.dump(contacts))
    end
  end
else
  contacts = Marshal.load(File.open(cachefile))
end

matches = contacts.find_all do |contact| 
  regexp = Regexp.new(ARGV[0],Regexp::IGNORECASE)
  regexp.match(contact[0]) or regexp.match(contact[1])
end

if matches.empty?
  puts "Not found"
else
  puts
  matches.each do |contact|
    puts contact.reverse.join("\t")
  end
end
